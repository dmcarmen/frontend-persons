{"version":3,"sources":["components/PersonForm.js","components/FilterForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","value","onChange","type","FilterForm","filterTextValue","filterTextOnChange","Button","handleClick","text","onClick","Person","person","name","number","Persons","persons","filterText","eraseEntry","filt","filter","toLowerCase","includes","map","id","baseUrl","axios","get","then","response","data","newObject","post","put","window","confirm","delete","Notification","msg","msgType","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterText","notifMessage","setNotifMessage","notifType","setNotifType","useEffect","personService","initialPersons","event","target","names","e","personObject","preventDefault","returnedPerson","catch","error","setTimeout","concat","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79fd2f5d.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({onSubmit, nameValue, nameOnChange, numberValue, numberOnChange}) => {\n    return(\n      <form onSubmit={onSubmit}>\n        <div>\n          name: <input value={nameValue} onChange={nameOnChange}/>\n        </div>\n        <div>\n          number: <input value={numberValue} onChange={numberOnChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )}\n  \nexport default PersonForm","import react from 'react'\n\nconst FilterForm = ({filterTextValue, filterTextOnChange}) => {\n    return(\n      <div>\n        filter shown with: <input value={filterTextValue} onChange={filterTextOnChange}/>\n      </div>\n    )\n  }\n\nexport default FilterForm","import react from 'react'\n\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Person = ({person}) => {\n    return(\n      <p>\n        {person.name} {person.number}\n      </p>\n    )\n  }\n\nconst Persons = ({persons, filterText, eraseEntry}) => {\n    const filt = persons.filter(person => \n      person.name.toLowerCase().includes(filterText.toLowerCase()))\n      \n    return(\n    <div>\n      {filt.map(person => \n      {\n        return(\n          <div key={person.id}>\n            <Person person={person} />\n            <Button handleClick={() => eraseEntry(person)} text='delete'/>\n          </div>\n          )\n      })}\n    </div>\n)}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst erase = (person) => {\n  if(window.confirm(`Delete ${person.name} ?`)){\n    const request = axios.delete(`${baseUrl}/${person.id}`)\n    return request.then(response => response.data)\n  }\n}\n\nexport default { getAll, create, update, erase }","import react from 'react'\n\nconst Notification = ({ msg, msgType }) => {\n    if (msg === null) {\n      return null\n    }\n  \n    return (\n      <div className={msgType}>\n        {msg}\n      </div>\n    )\n  }\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport FilterForm from './components/FilterForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterText, setFilterText] = useState('')\n  const [notifMessage, setNotifMessage] = useState(null)\n  const [notifType, setNotifType] = useState('notif')\n\n\n  const addPerson = (event) => {\n    const names = persons.map(e => e.name)\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    event.preventDefault()\n    if(names.includes(newName)){\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const oldPerson = persons.filter(person => person.name===newName)\n        const id = oldPerson[0].id\n        personService\n          .update(id, personObject).then(returnedPerson => {\n              setPersons(persons.map(person => person.id !==  id ? person : returnedPerson))\n            }).catch(error => {\n              setNotifMessage(`Information of ${newName} has already been removed.`)\n              setNotifType('error')\n              setTimeout(() => {\n                setNotifMessage(null)\n              }, 5000)\n              personService.getAll().then(initialPersons => {setPersons(initialPersons)})\n            })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setNotifMessage(`Added ${returnedPerson.name}`)\n          setNotifType('notif')\n          setTimeout(() => {\n            setNotifMessage(null)\n          }, 5000)\n          setPersons(persons.concat(returnedPerson))\n        })\n        .catch(error => {\n          setNotifType('error')\n          setNotifMessage(`${JSON.stringify(error.response.data)}`)\n          setTimeout(() => {\n            setNotifMessage(null)\n          }, 5000)\n        })\n    }\n    setNewNumber('')\n    setNewName('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilterText(event.target.value)\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const eraseEntry = (person) => {\n    personService.erase(person)\n    personService.getAll().then(initialPersons => {\n        setPersons(initialPersons)\n    })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification msg={notifMessage} msgType={notifType} />\n      <FilterForm\n        filterTextValue = {filterText} \n        filterTextOnChange= {handleFilterChange}\n      />\n      <h2>add a new</h2>\n      <PersonForm \n        onSubmit={addPerson} \n        nameValue={newName}\n        nameOnChange={handleNameChange}\n        numberValue={newNumber}\n        numberOnChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons \n        persons = {persons} \n        filterText={filterText} \n        eraseEntry={eraseEntry}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}